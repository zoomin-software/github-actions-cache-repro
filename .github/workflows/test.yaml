name: Broken caching repro

on:
  push:
    tags: #-- NOTE: **tag-triggered** workflow.
     - 'v*'
  #-- for debug, also triggered manually from GH Actions web UI, or `gh` CLI
  workflow_dispatch:
    inputs:
      version:
        description: Specify tag to build
        type: string
        required: false
        default: v0

env:
  #-- for debug, allow rebuilding preexisting tags, by specifying them in manual trigger
  VERSION: ${{ inputs.version || github.ref_name }}

run-name: ACME Release, version ${{ inputs.version || github.ref_name }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/cache@v4.2.3 # the latest, as of 2025 Mar 26
        id: cache1
        with:
          path: DIST
          key: CI-cache1.r0.#${{ github.run_number}.attempt#${{ github.run_attempt }}
          # key seems unnecessarily specific? that's to keep track of what's happening.
          #
          # in practice, the key changes in response to project-source-level events,
          # (like upgrades in compiler, or movement in the dependency forest),
          # causing cache invalidation & rebuild at the expected granularity.
          restore-keys: |
            CI-cache1.r0.#${{ github.run_number}.
            CI-cache1.r0.

      - name: Simulated rebuild of artifact on cold cache
        if: steps.cache1.outputs.cache-hit != 'true'
        run: |
          mkdir -p DIST
          cat > DIST/artifact.txt << EOF
          This is an artifact that we should imagine, takes long time to build.

          It's ought to get cached.

          Version: ${{ env.VERSION }}
          Timestamp: $(date --utc --rfc-2822)
          EOF
          sleep 5

      - name: Simulated final step: inspect cached artifact
        run: cat DIST/artifact.txt
